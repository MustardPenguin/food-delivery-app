
server:
  port: ${PORT:8182}

logging:
  level:
    org:
      springframework: ${LOGGING_LEVEL:INFO}

spring:
  application:
    name: order-service-query
  jpa:
    open-in-view: false

spring.datasource:
  url: jdbc:postgresql://${DATABASE_HOST:localhost}:5432/postgres?stringtype=unspecified&currentSchema=order_query
  username: ${DATABASE_USER:user}
  password: ${DATABASE_PASSWORD:admin}
  driver-class-name: org.postgresql.Driver

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

#spring.sql:
#  init:
#    schema-locations: classpath:init-schema.sql
#    platform: postgres
#    mode: always

kafka-consumer-data:
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:19092,localhost:29092,localhost:39092}
  schema-registry-url: ${SCHEMA_REGISTRY_HOST:http://localhost:8081}
  schema-registry-url-key: schema.registry.url
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true

spring.security:
  oauth2:
    resourceserver:
      jwt:
        jwk-set-uri: ${JWK_SET_URI:http://localhost:9090/realms/food-delivery-app/protocol/openid-connect/certs}